/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-10-26 09:47:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import DBConnect.dbconnect.*;
import java.sql.*;

public final class sell_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/header.html", Long.valueOf(1666744508529L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("DBConnect.dbconnect");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("  <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("    <script src=\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        .invoice-title h2, .invoice-title h3 {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table > tbody > tr > .no-line {\r\n");
      out.write("    border-top: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table > thead > tr > .no-line {\r\n");
      out.write("    border-bottom: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table > tbody > tr > .thick-line {\r\n");
      out.write("    border-top: 2px solid;\r\n");
      out.write("}\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css\" integrity=\"sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("    <title>Header</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        .head {\r\n");
      out.write("          margin: auto;\r\n");
      out.write("          width: 60%;\r\n");
      out.write("          padding: 10px;\r\n");
      out.write("          align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        a{\r\n");
      out.write("            margin-left: 80px;\r\n");
      out.write("            font-size: 40px;\r\n");
      out.write("        }\r\n");
      out.write("        </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"head\">\r\n");
      out.write("       <center><h1>RAMANA FERTILIZERS</h1></center>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <a href=\"home.jsp\"><i class=\"fa-solid fa-house\"></i></a>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');


long millis=System.currentTimeMillis();  
// creating a new object of the class Date  
Date date = new Date(millis);
// Reading the list of fertilizers and quantity as a string
String fert = request.getParameter("fertilizers").trim();
String qty = request.getParameter("quantity").trim();
//qty = qty.trim();
String price = request.getParameter("price").trim();
//Spilt the Strings
String[] f = fert.split(" ",0);
String[] q = qty.split(" ",0);
String[] p = price.split(" ",0);
float sum=0;
for(int i=0;i<f.length;i++)
{
	sum = sum + Integer.parseInt(q[i])*Float.parseFloat(p[i]);
	DBConnect.dbconnect.addSells(f[i],Integer.parseInt(q[i]),Float.parseFloat(p[i]));
}
String c_name = request.getParameter("c_name");
ResultSet rs = DBConnect.dbconnect.addTransaction(c_name, sum);
rs.next();

      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-xs-12\">\r\n");
      out.write("    		<div class=\"invoice-title\">\r\n");
      out.write("    			<h2>Invoice</h2><h3 class=\"pull-right\">Transaction# RMNF");
      out.print(rs.getInt("tid") );
      out.write("</h3>\r\n");
      out.write("    		</div>\r\n");
      out.write("    		<hr>\r\n");
      out.write("    		<div class=\"row\">\r\n");
      out.write("    			<div class=\"col-xs-6\">\r\n");
      out.write("    				<address>\r\n");
      out.write("    				<strong>Billed To:</strong><br>\r\n");
      out.write("    					");
      out.print(c_name );
      out.write("<br>\r\n");
      out.write("    				</address>\r\n");
      out.write("    			</div>\r\n");
      out.write("    		</div>\r\n");
      out.write("    		<div class=\"row\">\r\n");
      out.write("    			<div class=\"col-xs-6\">\r\n");
      out.write("    				<address>\r\n");
      out.write("    					<strong>Payment Method:</strong><br>\r\n");
      out.write("    					Cash<br>\r\n");
      out.write("    				</address>\r\n");
      out.write("    			</div>\r\n");
      out.write("    			<div class=\"col-xs-6 text-right\">\r\n");
      out.write("    				<address>\r\n");
      out.write("    					<strong>Order Date:</strong><br>\r\n");
      out.write("    					");
      out.print(date );
      out.write("<br><br>\r\n");
      out.write("    				</address>\r\n");
      out.write("    			</div>\r\n");
      out.write("    		</div>\r\n");
      out.write("    	</div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("    	<div class=\"col-md-12\">\r\n");
      out.write("    		<div class=\"panel panel-default\">\r\n");
      out.write("    			<div class=\"panel-heading\">\r\n");
      out.write("    				<h3 class=\"panel-title\"><strong>Order summary</strong></h3>\r\n");
      out.write("    			</div>\r\n");
      out.write("    			<div class=\"panel-body\">\r\n");
      out.write("    				<div class=\"table-responsive\">\r\n");
      out.write("    					<table class=\"table table-condensed\">\r\n");
      out.write("    						<thead>\r\n");
      out.write("                                <tr>\r\n");
      out.write("        							<td><strong>Item</strong></td>\r\n");
      out.write("        							<td class=\"text-center\"><strong>Price</strong></td>\r\n");
      out.write("        							<td class=\"text-center\"><strong>Quantity</strong></td>\r\n");
      out.write("        							<td class=\"text-right\"><strong>Totals</strong></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("    						</thead>\r\n");
      out.write("    						<tbody>\r\n");
      out.write("    							<!-- foreach ($order->lineItems as $line) or some such thing here -->\r\n");
      out.write("    							");
 
    							for(int i=0;i<f.length;i++)
    							{
      out.write("\r\n");
      out.write("    							<tr>\r\n");
      out.write("    								<td>");
      out.print(f[i] );
      out.write("</td>\r\n");
      out.write("    								<td class=\"text-center\">");
      out.print(p[i]);
      out.write("</td>\r\n");
      out.write("    								<td class=\"text-center\">");
      out.print(q[i]);
      out.write("</td>\r\n");
      out.write("    								<td class=\"text-right\">");
      out.print(Math.round(Integer.parseInt(q[i])*Float.parseFloat(p[i])));
      out.write("</td>\r\n");
      out.write("    							</tr>\r\n");
      out.write("    							");
} 
      out.write("\r\n");
      out.write("                                <tr>\r\n");
      out.write("    								<td class=\"thick-line\"></td>\r\n");
      out.write("    								<td class=\"thick-line\"></td>\r\n");
      out.write("    								<td class=\"thick-line text-center\"><strong>Subtotal</strong></td>\r\n");
      out.write("    								<td class=\"thick-line text-right\">");
      out.print(sum );
      out.write("</td>\r\n");
      out.write("    							</tr>\r\n");
      out.write("    							<tr>\r\n");
      out.write("    								<td class=\"no-line\"></td>\r\n");
      out.write("    								<td class=\"no-line\"></td>\r\n");
      out.write("    								<td class=\"no-line text-center\"><strong>CGST(9%)</strong></td>\r\n");
      out.write("    								<td class=\"no-line text-right\">");
      out.print(Math.round(sum*0.08) );
      out.write("</td>\r\n");
      out.write("    							</tr>\r\n");
      out.write("                                <tr>\r\n");
      out.write("    								<td class=\"no-line\"></td>\r\n");
      out.write("    								<td class=\"no-line\"></td>\r\n");
      out.write("    								<td class=\"no-line text-center\"><strong>SGST(9%)</strong></td>\r\n");
      out.write("    								<td class=\"no-line text-right\">");
      out.print(Math.round(sum*0.08) );
      out.write("</td>\r\n");
      out.write("    							</tr>\r\n");
      out.write("    							<tr>\r\n");
      out.write("    								<td class=\"no-line\"></td>\r\n");
      out.write("    								<td class=\"no-line\"></td>\r\n");
      out.write("    								<td class=\"no-line text-center\"><strong>Total</strong></td>\r\n");
      out.write("    								<td class=\"no-line text-right\">");
      out.print(Math.round(sum+(sum*0.18)) );
      out.write("</td>\r\n");
      out.write("    							</tr>\r\n");
      out.write("    						</tbody>\r\n");
      out.write("    					</table>\r\n");
      out.write("    				</div>\r\n");
      out.write("    			</div>\r\n");
      out.write("    		</div>\r\n");
      out.write("    	</div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<center><input type=\"button\" value=\"Print\" class=\"btn btn-success\" onclick=\"Print()\" id=\"Print\"></center>\r\n");
      out.write("<script>\r\n");
      out.write("function Print()\r\n");
      out.write("{\r\n");
      out.write("	window.print();\r\n");
      out.write("}\r\n");
      out.write("</script> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
